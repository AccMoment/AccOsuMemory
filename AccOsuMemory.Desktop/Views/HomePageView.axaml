<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:AccOsuMemory.Desktop.ViewModels"
             xmlns:extControl="clr-namespace:AccOsuMemory.Desktop.ExtControl"
             xmlns:converter="clr-namespace:AccOsuMemory.Desktop.Converter"
             xmlns:sayoEnum="clr-namespace:AccOsuMemory.Core.Models.SayoModels.Enum;assembly=AccOsuMemory.Core"
             xmlns:views="using:AccOsuMemory.Desktop.Views.Component"
             xmlns:sayo="clr-namespace:AccOsuMemory.Desktop.DTO.Sayo"
             xmlns:vo="clr-namespace:AccOsuMemory.Desktop.VO"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="AccOsuMemory.Desktop.Views.HomePageView"
             x:DataType="vm:HomePageViewModel"
             Name="Uc">
    <Design.PreviewWith>

    </Design.PreviewWith>
    <UserControl.Resources>
        <converter:LongToDateTimeConverter x:Key="LongToDateTimeConverter"></converter:LongToDateTimeConverter>
        <converter:MapApprovedConverter x:Key="MapApprovedConverter"></converter:MapApprovedConverter>
        <converter:ModeConverter x:Key="ModeConverter"></converter:ModeConverter>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="Button.ActionBtn">
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="Image.ActionIcon">
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
        </Style>

        <Style Selector="TextBlock">
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>

        <Style Selector="Border.ItemBorder">
            <Setter Property="Background" Value="Transparent"></Setter>
        </Style>

        <Style Selector="Border.ItemBorder:pointerover">
            <Setter Property="BoxShadow" Value="0 2 10 2 #40000000"></Setter>
        </Style>

        <Style Selector="Border.TipsBorder">
            <!-- <Setter Property="Width" Value="200" /> -->
            <Setter Property="Height" Value="40" />
            <Setter Property="Background" Value="{StaticResource TipsContainer}" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="0 30" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <!-- <Setter Property="RenderTransform" Value="TranslateY(-30px)"></Setter> -->
            <Setter Property="Opacity" Value="0"></Setter>
            <Setter Property="Transitions">
                <Transitions>
                    <!-- <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.75" /> -->
                    <DoubleTransition Property="Opacity" Duration="0:0:0.5"></DoubleTransition>
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="Border.ShowTips">
            <Setter Property="Opacity" Value="1" />
            <!-- <Setter Property="RenderTransform" Value="TranslateY(0px)"/> -->
        </Style>

        <Style Selector="Border.ShowErrorTips">
            <Setter Property="Background" Value="{StaticResource ErrorContainer}" />
            <Setter Property="Opacity" Value="1" />
            <!-- <Setter Property="RenderTransform" Value="TranslateY(0px)"/> -->
        </Style>

        <Style Selector="ListBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="ItemsPanel">
                <ItemsPanelTemplate>
                    <extControl:VirtualizingWrapPanel ItemHeight="275" ItemWidth="525"></extControl:VirtualizingWrapPanel>
                    <!-- <WrapPanel ItemHeight="275" ItemWidth="525" Orientation="Horizontal"></WrapPanel> -->
                </ItemsPanelTemplate>
            </Setter>
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="sayo:BeatmapDto">
                    <Border Margin="10" Classes="ItemBorder" CornerRadius="4" BorderThickness="1"
                            BorderBrush="#f0f0f0" Tag="{Binding Sid}">
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="PointerPressed">
                                <InvokeCommandAction
                                    Command="{Binding $parent[ListBox].((vm:HomePageViewModel)DataContext).OpenDetailPanelCommand}"
                                    CommandParameter="{Binding Sid}">
                                </InvokeCommandAction>
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>
                        <Grid RowDefinitions="136,*">
                            <Grid>
                                <!-- Thumbnail -->
                                <Grid>
                                    <Border ClipToBounds="True" CornerRadius="4 4 0 0">
                                        <extControl:AsyncImage AsyncSource="{Binding ThumbnailFile}" />
                                    </Border>
                                    <Border Background="Black" Opacity="0.35" CornerRadius="4 4 0 0" />
                                </Grid>

                                <!-- Rank Mark -->
                                <Border CornerRadius="16" Background="Black" Opacity="0.67" HorizontalAlignment="Left"
                                        VerticalAlignment="Top" Margin="8">
                                    <TextBlock
                                        Text="{Binding Approved,Converter={StaticResource MapApprovedConverter}}"
                                        FontSize="16" Foreground="White"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Padding="16 8"
                                        Opacity="1">
                                    </TextBlock>
                                </Border>

                                <TextBlock Text="{Binding Title}" FontSize="18" Foreground="White"
                                           HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="4">
                                </TextBlock>
                                <!-- <Image Source="{SvgImage /Assets/Images/pass.svg}" Classes="ActionIcon" -->
                                <!--        IsVisible="{CompiledBinding IsExist}" Margin="4" ToolTip.Tip="歌曲已存在于Songs文件夹中.." /> -->
                                <Svg Path="{Binding Modes,Converter={StaticResource ModeConverter}}" Width="25"
                                     Height="25"
                                     HorizontalAlignment="Right" VerticalAlignment="Top" Margin="8" />
                            </Grid>
                            <Grid Grid.Row="1" Margin="8">
                                <!-- Map Info -->
                                <StackPanel>
                                    <Grid ColumnDefinitions="Auto,Auto" Margin="0 4">
                                        <TextBlock Text="Creator : " Grid.Column="0" />
                                        <TextBlock Grid.Column="1" Text="{Binding Creator}" TextWrapping="Wrap" />
                                    </Grid>
                                    <Grid ColumnDefinitions="Auto,Auto" Margin="0 4">
                                        <TextBlock Grid.Column="0" Text="Artist : " />
                                        <TextBlock Grid.Column="1" Text="{Binding Artist}"
                                                   TextTrimming="CharacterEllipsis"
                                                   MaxLines="1" MaxWidth="460" TextWrapping="Wrap" />
                                    </Grid>
                                    <Grid ColumnDefinitions="Auto,Auto" Margin="0 4">
                                        <TextBlock Grid.Column="0" Text="LastUpdate : " />
                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding LastUpdate,Converter={StaticResource LongToDateTimeConverter}}"
                                                   TextWrapping="Wrap" />
                                    </Grid>
                                </StackPanel>

                                <!-- Action -->
                                <StackPanel VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button
                                        Command="{Binding $parent[UserControl].((vm:HomePageViewModel)DataContext).PlayAudioCommand}"
                                        CommandParameter="{Binding DataType=sayo:BeatmapDto,Path=PreviewAudio}"
                                        ToolTip.Tip="播放"
                                        ToolTip.ShowDelay="1000" 
                                        ToolTip.VerticalOffset="-51"
                                        ToolTip.HorizontalOffset="-30"
                                        Classes="WindowButton ActionBtn">
                                        <Image Source="{SvgImage /Assets/Images/play.svg}" Classes="ActionIcon" />
                                    </Button>
                                    <Button
                                        Command="{Binding $parent[UserControl].((vm:HomePageViewModel)DataContext).AddDownloadTaskCommand}"
                                        CommandParameter="{Binding}" ToolTip.Tip="下载"
                                        ToolTip.ShowDelay="1000" ToolTip.VerticalOffset="-51"
                                        ToolTip.HorizontalOffset="-26"
                                        Classes="WindowButton ActionBtn" Margin="4 0">
                                        <Image Source="{SvgImage /Assets/Images/download.svg}" Classes="ActionIcon" />
                                    </Button>
                                    <Button Classes="WindowButton ActionBtn" DataContext="{Binding}"
                                            ToolTip.Tip="分享链接" ToolTip.VerticalOffset="-55"
                                            ToolTip.HorizontalOffset="-40"
                                            ToolTip.ShowDelay="1000"
                                            Click="ShareLink_OnClick">
                                        <Image Source="{SvgImage /Assets/Images/post.svg}" Classes="ActionIcon" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                </DataTemplate>
            </Setter>
        </Style>

        <Style Selector="ListBoxItem">
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="Margin" Value="8"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Style.Animations>
                <Animation Duration="0:0:0.5" IterationCount="1">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0"></Setter>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="1"></Setter>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
            <Style
                Selector="^:selected /template/ ContentPresenter,^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style>

        <Style Selector="TextBlock.TipsText">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="White" />
        </Style>


        <Style Selector="views|DetailBeatmap[IsOpen=False]">
            <Setter Property="RenderTransform" Value="translateX(750px)" />
        </Style>
        <Style Selector="views|DetailBeatmap">
            <Setter Property="Transitions">
                <Transitions>
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" />
                    <!-- <DoubleTransition Property="Opacity" Duration="0:0:0.5"></DoubleTransition> -->
                </Transitions>
            </Setter>
        </Style>
        <Style Selector="views|DetailBeatmap[IsOpen=True]">
            <Setter Property="RenderTransform" Value="translateX(0px)" />

        </Style>
        <Style Selector="ScrollBar /template/ RepeatButton">
            <Setter Property="IsVisible" Value="False"/>
        </Style>
        
    </UserControl.Styles>
    <!-- <Interaction.Behaviors> -->
    <!--     <EventTriggerBehavior EventName="Loaded" SourceObject="Uc"> -->
    <!--         <InvokeCommandAction Command="{Binding LoadBeatMapsCommand}"></InvokeCommandAction> -->
    <!--     </EventTriggerBehavior> -->
    <!-- </Interaction.Behaviors> -->
    <Grid Name="HomePageGrid">

        <StackPanel IsVisible="{Binding !CanConnectNetWork}" VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <TextBlock FontSize="24" Text="网络状况出现异常，请检查网络设置。" Foreground="Black" />
            <Button Content="刷新" Command="{Binding LoadBeatMapsCommand}" HorizontalAlignment="Center" />
        </StackPanel>
        <Grid IsVisible="{Binding  CanConnectNetWork}">
            <ScrollViewer Name="SongsScroll" Offset="{Binding CurrentOffset, Mode=TwoWay}">
                <ListBox Name="BeatMapsLb" ItemsSource="{Binding BeatmapStorage.Beatmaps}"
                         SelectedItem="{Binding BeatmapStorage.SelectedBeatmap}" />
            </ScrollViewer>

            <Grid Name="MaskGrid" Background="Black" IsVisible="{Binding IsOpenDetailMapControl}" Opacity="0.75">
                <Interaction.Behaviors>
                    <EventTriggerBehavior EventName="PointerPressed" SourceObject="Uc">
                        <InvokeCommandAction Command="{Binding CloseDetailPanelAsyncCommand}" />
                    </EventTriggerBehavior>
                </Interaction.Behaviors>
            </Grid>
            
            
            <views:DetailBeatmap Name="DetailBeatmap" HorizontalAlignment="Right" Width="750"
                                 IsOpen="{Binding Path= $parent[Grid].((vm:HomePageViewModel)DataContext).IsOpenDetailMapControl }"
                                 DataContext="{Binding  BeatmapInfoStorage}">
                <Interaction.Behaviors>
                    <EventTriggerBehavior EventName="Close" >
                        <InvokeCommandAction
                            Command="{Binding $parent[Grid].((vm:HomePageViewModel)DataContext).CloseDetailPanelAsyncCommand}">
                        </InvokeCommandAction>
                    </EventTriggerBehavior>
                    <EventTriggerBehavior EventName="PlayAudio">
                        <InvokeCommandAction
                            Command="{Binding $parent[Grid].((vm:HomePageViewModel)DataContext).PlayAudioCommand}" CommandParameter="{Binding  BeatmapInfo.Sid}">
                        </InvokeCommandAction>
                    </EventTriggerBehavior>
                    <EventTriggerBehavior EventName="Download" >
                        <InvokeCommandAction
                            Command="{Binding $parent[Grid].((vm:HomePageViewModel)DataContext).AddDownloadTaskByTypeCommand}" CommandParameter="{x:Static sayoEnum:DownloadType.Full}">
                        </InvokeCommandAction>
                    </EventTriggerBehavior>
                    <EventTriggerBehavior EventName="NoVideoDownload" >
                        <InvokeCommandAction
                            Command="{Binding $parent[Grid].((vm:HomePageViewModel)DataContext).AddDownloadTaskByTypeCommand}" CommandParameter="{x:Static sayoEnum:DownloadType.NoVideo}">
                        </InvokeCommandAction>
                    </EventTriggerBehavior>
                    <EventTriggerBehavior EventName="MiniDownload">
                        <InvokeCommandAction
                            Command="{Binding $parent[Grid].((vm:HomePageViewModel)DataContext).AddDownloadTaskByTypeCommand}" CommandParameter="{x:Static sayoEnum:DownloadType.Mini}">
                        </InvokeCommandAction>
                    </EventTriggerBehavior>
                </Interaction.Behaviors>
            </views:DetailBeatmap>
            
            <Border Name="TipsBorder" Classes="TipsBorder">
                <TextBlock Name="TipsText" Classes="TipsText" Foreground="White" />
            </Border>
        </Grid>


    </Grid>
</UserControl>